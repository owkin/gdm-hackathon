[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gdm_hackathon"
version = "0.1.0"
description = "Biomarker discovery using genetic algorithm and Vertex AI"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
authors = [{ name = "GDM Hackathon Team" }]
keywords = [
    "biomarker",
    "genetic-algorithm",
    "vertex-ai",
    "gemini",
    "healthcare",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]

dependencies = [
    "numpy>=1.21.0",
    "tqdm>=4.62.0",
    "smolagents>=1.19.0",
    "google-cloud-aiplatform>=1.38.0",
    "vertexai>=0.0.1",
    "pandas>=1.3.0",
    "pyyaml>=6.0",
    "gcsfs>=2023.0.0",
    "ipykernel>=6.29.5",
    "openai>=1.93.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "gradio>=4.0.0",
    "biopython>=1.85",
]

[project.optional-dependencies]
dev = ["pytest>=7.0.0", "black>=22.0.0", "flake8>=4.0.0", "mypy>=0.950"]
viz = ["matplotlib>=3.5.0", "seaborn>=0.11.0", "plotly>=5.0.0"]
image = ["pillow>=8.3.0", "opencv-python>=4.5.0"]
# data_prep = [
#     "owkin-engine-features[prior_knowledge,survival,dea,transforms,optim,spt,sc]>=0.5.0",
#     "owkin-data-loader>=0.1.15",
# ]

# [[tool.uv.index]]
# name = "codeartifact"
# url = "https://abstra-058264397262.d.codeartifact.eu-west-1.amazonaws.com/pypi/owkin-pypi/simple/"
# explicit = false

# [tool.uv.sources]
# owkin-data-loader = { index = "codeartifact" }
# owkin-engine-features = { index = "codeartifact" }


# [project.scripts]
# gdm-evolve = "evolve:main"

[project.urls]
Homepage = "https://github.com/your-org/gdm-hackathon"
Repository = "https://github.com/your-org/gdm-hackathon"
Issues = "https://github.com/your-org/gdm-hackathon/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["tests*", "data*", "docs*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
